var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = STACatalogs","category":"page"},{"location":"#STACatalogs","page":"Home","title":"STACatalogs","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for STACatalogs.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [STACatalogs]","category":"page"},{"location":"#STACatalogs.STACatalog-Tuple{Any}","page":"Home","title":"STACatalogs.STACatalog","text":"cat = STACatalog(url)\n\nOpen a SpatioTemporal Asset Catalog (STAC) using the provided url. The url should point to a JSON object conforming to the STAC specification.\n\ncat behaves as a julia dictionary with all STAC subcatalogs. cat.items is a dictionary with all STAC items.\n\nusing STACatalogs\nurl = \"https://raw.githubusercontent.com/sat-utils/sat-stac/master/test/catalog/catalog.json\"\ncat = STACatalog(url)\nsubcat = cat[\"stac-catalog-eo\"]\nsubcat1 = subcat[\"landsat-8-l1\"]\n@show subcat1\n\nitem = subcat1.items[\"LC08_L1TP_152038_20200611_20200611_01_RT\"]\n@show item.assets[:B4][:href]\n\n\n\n\n\n","category":"method"},{"location":"#STACatalogs.bbox-Tuple{STACatalogs.Item}","page":"Home","title":"STACatalogs.bbox","text":" data = bbox(item)\n Get the bounding box of STAC `item`.\n\n\n\n\n\n","category":"method"},{"location":"#STACatalogs.description-Tuple{STACatalogs.Catalog}","page":"Home","title":"STACatalogs.description","text":" data = description(cat::Catalog)\n Get the description of STAC catalog.\n\n\n\n\n\n","category":"method"},{"location":"#STACatalogs.eachcatalog-Tuple{STACatalogs.Catalog}","page":"Home","title":"STACatalogs.eachcatalog","text":"cats = eachcatalog(catalog::Catalog)\n\nReturns resursively all subcatalogs in catalog. This can take a long time for deeply nested catalogs.\n\nurl = \"https://raw.githubusercontent.com/sat-utils/sat-stac/master/test/catalog/catalog.json\"\n\ncat = STACatalog(url)\nfor c in eachcatalog(cat)\n    @show id(c)\nend\n\n\n\n\n\n","category":"method"},{"location":"#STACatalogs.eachitem-Tuple{STACatalogs.Catalog}","page":"Home","title":"STACatalogs.eachitem","text":"cats = eachitem(catalog::Catalog)\n\nReturns resursively all items in catalog. This can take a long time for deeply nested catalogs.\n\nurl = \"https://raw.githubusercontent.com/sat-utils/sat-stac/master/test/catalog/catalog.json\"\n\ncat = STACatalog(url)\nfor c in eachitem(cat)\n    @show id(c)\nend\n\n\n\n\n\n","category":"method"},{"location":"#STACatalogs.geometry-Tuple{STACatalogs.Item}","page":"Home","title":"STACatalogs.geometry","text":"data = geometry(item) Get the geometry of STAC item as a GeoJSON object\n\n\n\n\n\n","category":"method"},{"location":"#STACatalogs.id-Tuple{STACatalogs.Catalog}","page":"Home","title":"STACatalogs.id","text":" data = id(cat::Catalog)\n Get the identifier of STAC catalog.\n\n\n\n\n\n","category":"method"},{"location":"#STACatalogs.id-Tuple{STACatalogs.Item}","page":"Home","title":"STACatalogs.id","text":" data = id(item)\n Get the identifier of STAC `item`.\n\n\n\n\n\n","category":"method"},{"location":"#STACatalogs.links-Tuple{STACatalogs.Item}","page":"Home","title":"STACatalogs.links","text":" data = links(item)\n Get the links of STAC `item`.\n\n\n\n\n\n","category":"method"},{"location":"#STACatalogs.properties-Tuple{STACatalogs.Item}","page":"Home","title":"STACatalogs.properties","text":" data = properties(item)\n Get the properties of STAC `item`.\n\n\n\n\n\n","category":"method"},{"location":"#STACatalogs.set_cache_max_size-Tuple{Integer}","page":"Home","title":"STACatalogs.set_cache_max_size","text":"STACatalogs.set_cache_max_size(cache_max_size::Integer)\n\nSet the maximum number of URLs saved in cache (permanentaly). The default is 1000. The Julia session need to be restated for this change to take effect.\n\n\n\n\n\n","category":"method"}]
}
